<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <BlazorEnableCompression>false</BlazorEnableCompression>
    <AssemblyVersion>1.0.1</AssemblyVersion>
    <BlazorWebAssemblyEnableLinking>false</BlazorWebAssemblyEnableLinking>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <PublishTrimmed>false</PublishTrimmed>
    <PublishDir>$(ProjectDir)..\Build</PublishDir>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Blazored.LocalStorage" Version="4.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="6.0.6" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="6.0.6" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.2.0" />
    <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" Version="17.2.32">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Roslyn.Analyzers" Version="1.0.3.4" />
    <PackageReference Include="System.Net.Http.Json" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\UserScripts\PondSharp.UserScripts.csproj" />
    <ProjectReference Include="..\Examples\PondSharp.Examples.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ExampleFiles Include="$(ProjectDir)..\Examples\*.cs" />
    <WebpackFiles Include="$(ProjectDir)**\*.ts;$(ProjectDir)**\*.scss" />
    <CompiledWebpackFiles Include="$(OutDir)wwwroot\assets\**.*;$(OutDir)wwwroot\index.html" />
    <NodePackageSource Include="$(ProjectDir)package.json;$(ProjectDir)package-lock.json" />
    <NodeModules Include="$(ProjectDir)node_modules" />
    <SampleProjectExampleFiles Include="$(ProjectDir)\SampleProject\PondSharp.Examples\**\*.cs" />
  </ItemGroup>
  
  <ItemGroup>
    <Content Include="favicon.ico" />
    <Content Include="index.html" />
    <None Remove="SampleProject\**" />
    <Compile Remove="SampleProject\**" />
    <EmbeddedResource Remove="SampleProject\**" />
    <Content Remove="SampleProject\**" />
  </ItemGroup>
  
  <Target Name="CopyExampleScriptsToUserScripts" AfterTargets="NpmBuild" Inputs="@(ExampleFiles)" Outputs="@(ExampleFiles->'$(OutDir)\wwwroot\user-scripts\%(RecursiveDir)%(Filename)%(Extension).txt')">
    <Message Text="Copying Example Files To User Scripts" Importance="high" />
    <MakeDir Directories="$(OutDir)wwwroot\user-scripts" />
    <Copy SourceFiles="@(ExampleFiles)" DestinationFiles="@(ExampleFiles->'$(OutDir)\wwwroot\user-scripts\%(RecursiveDir)%(Filename)%(Extension).txt')" />
  </Target>

  <Target Name="CopyExampleScriptsToSampleProject" AfterTargets="NpmBuild" Inputs="@(ExampleFiles)" Outputs="@(ExampleFiles->'$(ProjectDir)\SampleProject\PondSharp.Examples\%(RecursiveDir)%(Filename)%(Extension)')">
    <Message Text="Copying Example Files To Sample Project" Importance="high" />
    <Copy SourceFiles="@(ExampleFiles)" DestinationFiles="@(ExampleFiles->'$(ProjectDir)\SampleProject\PondSharp.Examples\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="MakeSampleZip" AfterTargets="CopyExampleScriptsToSampleProject" Inputs="$(ProjectDir)..\UserScripts\bin\$(Configuration)\netstandard2.1\PondSharp.UserScripts.dll;$(ProjectDir)..\UserScripts\bin\$(Configuration)\PondSharp.UserScripts.xml;$(ProjectDir)SampleProject\**\*.*" Outputs="$(ProjectDir)wwwroot\sample-project.zip">
    <Message Text="Copying UserScripts DLL" Importance="high" />
    <Copy SourceFiles="$(ProjectDir)..\UserScripts\bin\$(Configuration)\netstandard2.1\PondSharp.UserScripts.dll;$(ProjectDir)\..\UserScripts\bin\$(Configuration)\PondSharp.UserScripts.xml" DestinationFolder="SampleProject\PondSharp.Examples" />
    <Message Text="Creating Sample Project ZIP" Importance="high" />
    <ZipDirectory DestinationFile="$(OutDir)wwwroot\sample-project.zip" SourceDirectory="SampleProject" Overwrite="true" />
  </Target>

  <Target Name="NpmInstall" BeforeTargets="NpmBuild" Inputs="@(NodePackageSource)" Outputs="@(NodeModules)">
    <Message Text="Installing Node Dependencies (NpmInstall)" Importance="high" />
    <Exec Command="npm ci -q" Condition="$(Configuration) == 'Release'" />
    <Exec Command="npm install -q" Condition="$(Configuration) == 'Debug'" />
  </Target>

  <Target Name="NpmBuild" AfterTargets="AfterCompile" Inputs="@(WebpackFiles)" Outputs="@(CompiledWebpackFiles)">
    <Message Text="Building Client Assets (NpmBuild)" Importance="high" />
    <Exec Command="npm run build:release" Condition="$(Configuration) == 'Release'" />
    <Exec Command="npm run build:debug" Condition="$(Configuration) == 'Debug'" />
  </Target>

  <Target Name="CleanWeb" BeforeTargets="Clean">
    <Message Text="Cleaning Built Files" />
    <Delete Files="@(CompiledWebpackFiles)" />
    <Delete Files="@(SampleProjectExampleFiles)" />
    <RemoveDir Directories="$(ProjectDir)node_modules" />
  </Target>
  
  <Target Name="CleanPublicBeforePublish" BeforeTargets="BeforePublish">
    <RemoveDir Directories="$(PublishDir)wwwroot" />
  </Target>
  
  <Target Name="CopyAllWWWPublic" AfterTargets="AfterPublish">
    <ItemGroup>
      <WWWFiles Include="$(OutDir)wwwroot\**\*.*" Exclude="$(OutDir)wwwroot\_framework\**\*.*" />
    </ItemGroup>
    <PropertyGroup>
      <GitAttributes>
autocrlf=false
* binary
      </GitAttributes>
    </PropertyGroup>
    <Message Text="Copying WWW Public Files" />
    <Copy SourceFiles="@(WWWFiles)" DestinationFiles="@(WWWFiles->'$(PublishDir)wwwroot\%(RecursiveDir)%(Filename)%(Extension)')" />
    <WriteLinesToFile File="$(PublishDir)wwwroot\.nojekyll" Lines="" Overwrite="true" />
    <WriteLinesToFile File="$(PublishDir)wwwroot\.gitattributes" Lines="$(GitAttributes)" Overwrite="true" />
  </Target>
</Project>
