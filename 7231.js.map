{"version":3,"file":"7231.js","mappings":"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","sources":["webpack://pondsharp.client/./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","webpack://pondsharp.client/./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","webpack://pondsharp.client/./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/colors.js","webpack://pondsharp.client/./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/json.js","webpack://pondsharp.client/./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/objects.js","webpack://pondsharp.client/./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js","webpack://pondsharp.client/./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-uri/index.js","webpack://pondsharp.client/./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = undefined;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var len = text.length;\n    var pos = 0, value = '', tokenOffset = 0, token = 16 /* Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                var ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenStartLine: function () { return lineStartOffset; },\n        getTokenStartCharacter: function () { return tokenOffset - prevTokenLineStartOffset; },\n        getTokenError: function () { return scanError; },\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar a = 97;\nvar f = 102;\nexport function hexDigit(charCode) {\n    if (charCode < Digit0) {\n        return 0;\n    }\n    if (charCode <= Digit9) {\n        return charCode - Digit0;\n    }\n    if (charCode < a) {\n        charCode += (a - A);\n    }\n    if (charCode >= a && charCode <= f) {\n        return charCode - a + 10;\n    }\n    return 0;\n}\nexport function colorFromHex(text) {\n    if (text[0] !== '#') {\n        return undefined;\n    }\n    switch (text.length) {\n        case 4:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: 1\n            };\n        case 5:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(4)) * 0x11) / 255.0,\n            };\n        case 7:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: 1\n            };\n        case 9:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(7)) * 0x10 + hexDigit(text.charCodeAt(8))) / 255.0\n            };\n    }\n    return undefined;\n}\nexport function colorFrom256RGB(red, green, blue, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    return {\n        red: red / 255.0,\n        green: green / 255.0,\n        blue: blue / 255.0,\n        alpha: alpha\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function stringifyObject(obj, indent, stringifyLiteral) {\n    if (obj !== null && typeof obj === 'object') {\n        var newIndent = indent + '\\t';\n        if (Array.isArray(obj)) {\n            if (obj.length === 0) {\n                return '[]';\n            }\n            var result = '[\\n';\n            for (var i = 0; i < obj.length; i++) {\n                result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n                if (i < obj.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + ']';\n            return result;\n        }\n        else {\n            var keys = Object.keys(obj);\n            if (keys.length === 0) {\n                return '{}';\n            }\n            var result = '{\\n';\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                result += newIndent + JSON.stringify(key) + ': ' + stringifyObject(obj[key], newIndent, stringifyLiteral);\n                if (i < keys.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + '}';\n            return result;\n        }\n    }\n    return stringifyLiteral(obj);\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    var i, key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        var oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        var otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function isNumber(val) {\n    return typeof val === 'number';\n}\nexport function isDefined(val) {\n    return typeof val !== 'undefined';\n}\nexport function isBoolean(val) {\n    return typeof val === 'boolean';\n}\nexport function isString(val) {\n    return typeof val === 'string';\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nvar isWindows;\nif (typeof process === 'object') {\n    isWindows = process.platform === 'win32';\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    isWindows = userAgent.indexOf('Windows') >= 0;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction isLowerAsciiHex(code) {\n    return code >= 97 /* a */ && code <= 102 /* f */;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n//#endregion\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return uriToFsPath(this, false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // /**\n    //  * Join a URI path with path fragments and normalizes the resulting path.\n    //  *\n    //  * @param uri The input URI.\n    //  * @param pathFragment The path fragment to add to the URI path.\n    //  * @returns The resulting URI.\n    //  */\n    // static joinPath(uri: URI, ...pathFragment: string[]): URI {\n    // \tif (!uri.path) {\n    // \t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n    // \t}\n    // \tlet newPath: string;\n    // \tif (isWindows && uri.scheme === 'file') {\n    // \t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n    // \t} else {\n    // \t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n    // \t}\n    // \treturn uri.with({ path: newPath });\n    // }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\nvar _pathSepMarker = isWindows ? 1 : undefined;\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = uriToFsPath(this, false);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nvar _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, function (match) { return decodeURIComponentGraceful(match); });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction format(message, args) {\n    var result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            return typeof args[index] !== 'undefined' ? args[index] : match;\n        });\n    }\n    return result;\n}\nfunction localize(key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nexport function loadMessageBundle(file) {\n    return localize;\n}\nexport function config(opt) {\n    return loadMessageBundle;\n}\n"],"names":["ParseOptions","getLocation","text","position","segments","earlyReturnException","Object","previousNode","undefined","previousNodeInst","value","offset","length","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","visit","onObjectBegin","push","onObjectProperty","name","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getNodeType","onSeparator","sep","last","e","path","matches","pattern","k","i","parse","errors","options","DEFAULT","currentProperty","currentParent","previousParents","onValue","Array","isArray","object","array","onError","error","parseTree","children","ensurePropertyComplete","endOffset","valueNode","result","findNodeAtLocation","root","node","_i","path_1","segment","found","_a","_b","propertyNode","index","getNodePath","key","indexOf","getNodeValue","map","obj","create","prop","findNodeAtOffset","includeRightBound","contains","item","visitor","_scanner","toNoArgVisit","visitFunction","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","toOneArgVisit","arg","onComment","disallowComments","allowTrailingComma","scanNext","token","scan","getTokenError","handleError","skipUntilAfter","skipUntil","getToken","parseString","isValue","getTokenValue","allowEmptyContent","parseValue","needsComma","parseArray","parseObject","JSON","parseLiteral","stripComments","replaceCh","kind","pos","parts","getPosition","substring","replace","join","createScanner","ignoreTrivia","len","tokenOffset","lineNumber","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","count","exact","digits","ch","charCodeAt","code","isWhiteSpace","String","fromCharCode","isLineBreak","start","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","hexDigit","charCode","colorFromHex","red","green","blue","alpha","stringifyObject","indent","stringifyLiteral","newIndent","keys","stringify","equals","one","other","oneKeys","sort","otherKeys","isNumber","val","isDefined","isBoolean","isString","startsWith","haystack","needle","endsWith","diff","lastIndexOf","convertSimple2RegExpPattern","extendStatics","isWindows","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","prototype","process","platform","navigator","userAgent","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","URI","schemeOrData","authority","query","fragment","_strict","scheme","_schemeFix","_referenceResolution","ret","Error","test","_validateUri","isUri","thing","fsPath","with","toString","defineProperty","get","uriToFsPath","enumerable","configurable","change","_URI","match","exec","percentDecode","file","idx","from","components","skipEncoding","_asFormatted","toJSON","revive","data","_formatted","external","_fsPath","_sep","_pathSepMarker","_super","_this","apply","arguments","res","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","uri","keepDriveLetterCasing","toLowerCase","encoder","userinfo","decodeURIComponentGraceful","str","decodeURIComponent","_rEncodedAsHex","format","message","args","rest","localize","loadMessageBundle"],"sourceRoot":""}